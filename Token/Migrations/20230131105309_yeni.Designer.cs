// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Token.Models;

#nullable disable

namespace Token.Migrations
{
    [DbContext(typeof(KitapDbContext))]
    [Migration("20230131105309_yeni")]
    partial class yeni
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Token.Models.Kategoriler", b =>
                {
                    b.Property<int>("KategoriId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("KategoriID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KategoriId"), 1L, 1);

                    b.Property<string>("KategoriAdi")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("KategoriId");

                    b.ToTable("Kategoriler", (string)null);
                });

            modelBuilder.Entity("Token.Models.Kitaplar", b =>
                {
                    b.Property<int>("KitapId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("KitapID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KitapId"), 1L, 1);

                    b.Property<decimal>("Fiyat")
                        .HasColumnType("money");

                    b.Property<string>("KapakResmi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("KategoriId")
                        .HasColumnType("int")
                        .HasColumnName("KategoriID");

                    b.Property<string>("KitapAdi")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("KitapId");

                    b.HasIndex(new[] { "KategoriId" }, "IX_Kitaplar_KategoriID");

                    b.ToTable("Kitaplar", (string)null);
                });

            modelBuilder.Entity("Token.Models.Kullanici", b =>
                {
                    b.Property<int>("kullaniciID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("kullaniciID"), 1L, 1);

                    b.Property<string>("Sifre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("kullaniciAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("kullaniciID");

                    b.ToTable("Kullanicilar");

                    b.HasData(
                        new
                        {
                            kullaniciID = 1,
                            Sifre = "cev123",
                            kullaniciAdi = "cevdo"
                        },
                        new
                        {
                            kullaniciID = 2,
                            Sifre = "sel123",
                            kullaniciAdi = "selo"
                        });
                });

            modelBuilder.Entity("Token.Models.Kitaplar", b =>
                {
                    b.HasOne("Token.Models.Kategoriler", "Kategori")
                        .WithMany("Kitaplars")
                        .HasForeignKey("KategoriId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kategori");
                });

            modelBuilder.Entity("Token.Models.Kategoriler", b =>
                {
                    b.Navigation("Kitaplars");
                });
#pragma warning restore 612, 618
        }
    }
}
